syntax = "proto3";

// Java 코드 생성 시 각 메시지 및 서비스에 대해 별도의 .java 파일을 생성하도록 합니다. (true: 각자 파일, false: 단일 파일 안에 중첩)
option java_multiple_files = true;
// 생성될 Java 클래스들이 위치할 패키지명을 지정합니다.
option java_package = "com.example.grpc.service";
// 생성될 Java 외부 클래스(Outer Class)의 이름을 지정합니다. (java_multiple_files가 false일 때 주로 사용)
option java_outer_classname = "HelloServiceProto";

// Protocol Buffers 내부에서 사용될 패키지명을 정의
package com.example.grpc;

// Greeting 기능을 제공하는 서비스 'HelloService'를 정의합니다.
service HelloService {
  // 단방향(Unary) RPC 메서드를 정의합니다.
  // 클라이언트가 'HelloRequest' 메시지를 보내면, 서버는 'HelloResponse' 메시지로 응답합니다.
   rpc requestMessage (HelloRequest) returns (HelloResponse);
}

// 클라이언트가 서버로 보낼 요청 메시지 'HelloRequest'의 구조를 정의합니다.
message HelloRequest {
  string jsonString = 1;
}

// 서버가 클라이언트에 보낼 응답 메시지 'HelloResponse'의 구조를 정의합니다.
message HelloResponse {
  string jsonString = 1;
}